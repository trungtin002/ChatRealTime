"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const perf_hooks_1 = require("perf_hooks");
class Stopwatch {
    constructor() {
        this.startTime = -1;
        this.endTime = -1;
        this.lastStepTime = -1;
    }
    /**
     * Start the this.
     * @return {number} The current timestamp in milliseconds.
     */
    start() {
        this.startTime = perf_hooks_1.performance.now();
        return this.startTime;
    }
    /**
     * Stop the stopwatch and reset the start time.
     * @return {number} The elapsed time in milliseconds since the stopwatch was started.
     */
    stop() {
        if (this.startTime === -1) {
            throw new Error("Stopwatch was not previously started");
        }
        this.endTime = Math.round(perf_hooks_1.performance.now() - this.startTime);
        this.startTime = -1;
        return this.endTime;
    }
    step() {
        if (this.startTime === -1) {
            throw new Error("Stopwatch was not previously started");
        }
        this.lastStepTime = perf_hooks_1.performance.now() - this.startTime;
        return this.lastStepTime;
    }
    /**
     * Reset both the start and end times.
     */
    reset() {
        this.endTime = -1;
        this.startTime = -1;
    }
    /**
     * The last recorded end time or '-1' if none.
     */
    get lastEndTime() {
        return this.endTime;
    }
}
exports.default = Stopwatch;
