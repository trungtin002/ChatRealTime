import { Constraint } from "./runner";
export default abstract class Does {
    /**
     * Assert that input is a string starting with the specified string.
     */
    static startWith(str: string): Constraint;
    /**
     * Assert that input is a string ending with the specified string.
     */
    static endWith(str: string): Constraint;
    /**
     * Assert that input matches specified patterns.
     * @param {RegExp[]} patterns The patterns to match.
     */
    static match(...patterns: RegExp[]): Constraint;
    /**
     * Assert that input is an array containing the specified item.
     * @param {*} item The item to verify the existance of.
     */
    static include(item: any): Constraint;
    /**
     * Assert that input entity contains a certain property.
     * @param {string} name The name of the property to verify the existance of.
     */
    static haveProperty(name: string): Constraint;
    /**
     * Assert that input has the specified length property value.
     * @param {number} length The length to assert.
     */
    static haveLength(length: number): Constraint;
    /**
     * Assert that input has the specified size property value.
     * @param {number} length The size to assert.
     */
    static haveSize(size: number): Constraint;
}
